syntax = "proto3";
package api.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";

option go_package = "github.com/mholtzscher/weather-archiver/gen/api/v1;apiv1";

service WeatherService {
  rpc EcowittUpload(EcowittUploadRequest) returns (EcowittUploadResponse) {
    option (google.api.http) = {
      post: "/v1/weather/ecowitt"
      body: "*"
    };
  }

  rpc WeatherUndergroundUpload(WeatherUndergroundUploadRequest) returns (WeatherUndergroundUploadResponse) {
    option (google.api.http) = {get: "/v1/weather/wunderground"};
  }
}

message EcowittUploadRequest {}

message EcowittUploadResponse {}

message WeatherUndergroundUploadRequest {
  string id = 1 [(buf.validate.field).required = true];
  string password = 2 [(buf.validate.field).required = true];
  string dateutc = 3 [(buf.validate.field).required = true];
  double tempf = 4;
}

message WeatherUndergroundUploadResponse {}
//
// message CreateSeasonRequest {
//   int32 year = 1 [(buf.validate.field).int32 = {
//     gt: 1900
//     lte: 2100
//   }];
//   string series = 2 [(buf.validate.field).required = true];
// }
//
// message CreateSeasonResponse {
//   int32 season_id = 1;
// }
//
// message GetSeasonByIdRequest {
//   int32 season_id = 1 [(buf.validate.field).int32 = {gt: 0}];
// }
//
// message GetSeasonByIdResponse {
//   Season season = 1;
// }
//
// message GetAllSeasonsRequest {}
//
// message GetAllSeasonsResponse {
//   repeated Season seasons = 1;
// }
//
// message CreateDriverRequest {
//   option (buf.validate.message).cel = {
//     id: "create_driver_dob_year"
//     message: "the date of birth must have year"
//     expression: "has(this.date_of_birth.year)"
//   };
//   option (buf.validate.message).cel = {
//     id: "create_driver_dob_month"
//     message: "the date of birth must have month"
//     expression: "has(this.date_of_birth.month)"
//   };
//   option (buf.validate.message).cel = {
//     id: "create_driver_dob_day"
//     message: "the date of birth must have day"
//     expression: "has(this.date_of_birth.day)"
//   };
//
//   string first_name = 1 [(buf.validate.field).required = true];
//   string last_name = 2 [(buf.validate.field).required = true];
//   string place_of_birth = 3 [(buf.validate.field).required = true];
//   google.type.Date date_of_birth = 4 [(buf.validate.field).required = true];
// }
//
// message CreateDriverResponse {
//   int32 driver_id = 1;
// }
//
// message GetDriverByIdRequest {
//   int32 driver_id = 1 [(buf.validate.field).int32 = {gt: 0}];
// }
//
// message GetDriverByIdResponse {
//   Driver driver = 1;
// }
//
// message CreateTeamRequest {
//   string name = 1 [(buf.validate.field).required = true];
//   string base = 2 [(buf.validate.field).required = true];
// }
//
// message CreateTeamResponse {
//   int32 team_id = 1;
// }
//
// message CreateRaceRequest {
//   option (buf.validate.message).cel = {
//     id: "create_race_year"
//     message: "the date of race must have year"
//     expression: "has(this.date.year)"
//   };
//   option (buf.validate.message).cel = {
//     id: "create_race_month"
//     message: "the date of race must have month"
//     expression: "has(this.date.month)"
//   };
//   option (buf.validate.message).cel = {
//     id: "create_race_day"
//     message: "the date of race must have day"
//     expression: "has(this.date.day)"
//   };
//
//   int32 season_id = 1 [(buf.validate.field).int32 = {gt: 0}];
//   string name = 2 [(buf.validate.field).required = true];
//   string location = 3 [(buf.validate.field).required = true];
//   google.type.Date date = 4 [(buf.validate.field).required = true];
// }
//
// message CreateRaceResponse {
//   int32 race_id = 1;
// }
//
// message GetRaceByIdRequest {
//   int32 race_id = 1 [(buf.validate.field).int32 = {gt: 0}];
// }
//
// message GetRaceByIdResponse {
//   Race race = 1;
// }
//
// message CreateResultRequest {
//   int32 race_id = 1 [(buf.validate.field).int32 = {gt: 0}];
//   int32 driver_id = 2 [(buf.validate.field).int32 = {gt: 0}];
//   int32 team_id = 3 [(buf.validate.field).int32 = {gt: 0}];
//   int32 position = 4 [(buf.validate.field).int32 = {
//     gt: 0
//     lte: 20
//   }];
//   double points = 5 [(buf.validate.field).double = {
//     gte: 0.0
//     lte: 26.0
//   }];
// }
//
// message CreateResultResponse {
//   int32 result_id = 1;
// }
//
// message GetResultByIdRequest {
//   int32 result_id = 1 [(buf.validate.field).int32 = {gt: 0}];
// }
//
// message GetResultByIdResponse {
//   Result result = 1;
// }
//
// message GetResultsByRaceRequest {
//   int32 race_id = 1 [(buf.validate.field).int32 = {gt: 0}];
// }
//
// message GetResultsByRaceResponse {
//   repeated Result results = 1;
// }
